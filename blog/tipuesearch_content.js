var tipuesearch = {"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/about/"},{"title":"2024 Spring 課程w10","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w10 協同產品設計實習第十週實習操作, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. W10 實習任務一: 將老師給的2a出席名單，將程式詢問AI後，在每行後方進行註記，方便了解與解析此Brython程式如何進行運作 下方程式已經對每行進行註解。 程式gists url 程式內容與重點，程式是如何運行與操作的 這段程式碼主要的功能是從指定的 URL 下載一個 CSV 檔案，然後將檔案內容解析成學員資料，並將這些資料格式化後插入到 HTML 文件中的特定位置。這裡我們來看一下程式碼的運作方式和重點： 1. **fetch_csv_data 函式**：這是程式的入口點。它會執行 AJAX 請求以獲取 CSV 檔案的內容。當請求完成時，它會呼叫 `on_complete` 函式處理回應。 2. **on_complete 函式**：這個函式是 AJAX 請求完成後的回調函式。如果請求成功（狀態碼為 200 或 0），則會將 CSV 檔案的內容解析並格式化後插入到 HTML 文件中的指定位置（`brython_div`）；否則會輸出錯誤訊息。 3. **解析 CSV 檔案內容**：在 `on_complete` 函式中，程式將 CSV 檔案的內容解析成行，然後每行再根據逗號進行拆分，以獲得每個資料項。在這之後，它會過濾空白行，並將有效的資料存入 `data` 列表中。 4. **資料格式化與插入 HTML**：對於每個有效的資料項，程式會從中提取學號、GitHub 使用者名稱和組別資訊。然後，它會建立學號對應的網站連結、倉庫連結和組別連結，並將這些資訊格式化後插入到 HTML 文件中的 `brython_div` 元素中。 5. **發送 AJAX 請求**：在 `fetch_csv_data` 函式中，程式會建立一個 AJAX 請求，設置相應的回調函式，然後發送 GET 請求以獲取 CSV 檔案的內容。 這段程式碼的核心是利用 AJAX 技術從指定的 URL 下載 CSV 檔案，然後解析該檔案並將其內容格式化後插入到 HTML 文件中的指定位置，以展示學員資料。 鋼球平衡台 PID 控制與模擬 W10 實習任務二: 請下載 cd2024_ball_balancing_platform_control_ref.7z , 閱讀後請將摘要內容放入個人與分組網誌中. 閱讀結果: 各篇論文要點摘要： 結論： 實習步驟: 開啟可攜程式系統中的 CoppeliaSim 開啟鋼球平衡台模擬場景 啟動可攜程式系統, pip install keyboard cbor pyzmq matplotlib 在 SciTE 中執行上列程式, 確定系統穩定後, 按下 q 終止模擬 matplotlib 將畫出鋼球在平台上的 x 與 y 座標圖 鋼球平衡台零組件繪圖 W10 實習任務三: 請根據 Solvespace_model _2d_for_cd2024_w6.7z 零組件尺寸, 利用 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.","tags":"w10","url":"./41023124_2024-Spring-w10-blog-tutorial.html"},{"title":"如何解決群組倉儲衝突","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 解決群組倉儲衝突方法 請\"每位\"組員檢查自己的上傳、編輯方式中 ( Codespace 、近端、Replit )有沒有之前弄錯的子模組 ( cd2024 與 4102324 ) ，如果有的話請刪除，不然之後上船都會有問題，以下是刪除方法。 如果你的codespace有cd2024的子模組 就打 git submodule deinit cd2024 git rm --cached cd2024 rm -rf cd2024 刪除完在git push就好 反之有4102324 就把cd2024改為4102324 這張照片我刪完cd2024的submodule了，所以看不到cd2024的子模組，請組員自己檢查有沒有 ( Codespace)","tags":"如何解決群組倉儲衝突","url":"./41023124_2024-Spring-如何解決群組倉儲衝突-blog-tutorial.html"},{"title":"2024 Spring 課程w4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 目前依照w1~w3影片進行打字幕、逐字稿、並且整理影片的重點內容 協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用. 教學影片分組整理並自評 第六組 組別自評成績 80 分 41023124 w4自評成績 75 分 cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回 github cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github cd2024 2b 3 如何設定 Github 帳號的雙重認證 41023122 w4自評成績 70分 cd2024 2b 1 建立個人課程倉儲與網站 cd2024 2a 1 blog setup 41023107 w4自評成績65分 cd2024 2b w3 使用 gitpod 與 localhost 維護個人倉儲 41023152 w4成績自評 65分 41023233 w4自評成績75分 cd2024_2b_5_w2 第一組組長建立 Team 並設定分組倉儲 cd2024_2b_6_w2 從第一組空倉儲建立 cmsimde_site 內容 cd2024_2b_7_w2 利用 codespaces 維護分組網站 41023249 w4自評成績68 41023239 w4自評成績70 cd2024_2a_w2_1 cd2024 2a w2 4 利用 Replit 管理 Github Classroom 分組倉儲 41023225 w4自評成績65","tags":"w4","url":"./2a-midag6_2024-Spring-w4-blog-tutorial.html"},{"title":"2024 Spring 課程w3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 每周進度報告w3 w3 W3 任務交付與w3-2中的教學影片進行操作 cd2024 w3 任務 1. 請各組將組員的個人課程倉儲 cd2024 設為分組倉儲 2a-midag1 的子模組, 且以各組員的學號作為子模組的名稱 2. 請各組員將負責分工處理的 https://webthesis.biblio.polito.it/16429/1/tesi.pdf 中英文並列資料 (LaTeX) 放在個人的倉儲網站, 最後在分組倉儲中整合建立出各組的期中報告 pdf 檔案 w3-2 本周為第三周，進度是照著網誌中的影片將組員的個人倉儲設為分組倉儲子模組與有關 LaTeX 轉 pdf 在 Windows 環境, 說明如何利用 LaTeX 協同建立分組報告。 2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 列出期中分組倉儲與網站 cd2024 期中分組倉儲與網站 期中協同分組報告 請參考 https://github.com/mdecd2024/test-ag1 中的 latex 目錄與 downloads 目錄中的 https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt 並根據下列教學範例: 說明 如何將 41123130 的個人倉儲設為 2a-midag2 分組倉儲的子模組 說明 如何將組員的個人倉儲納入分組倉儲成為子模組 說明 如何在 Replit 維護分組倉儲","tags":"w3","url":"./2a-midag6_2024-Spring-w3-blog-tutorial.html"},{"title":"2024 Spring 課程w2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 每周進度報告w2 第二周進度 協同產品設計實習的第二週, 主要利用 Github Classroom 進行分組, 並跟著老師操作與使用Codespaces、近端與Replit進行倉儲維護，並跟著下方所錄的教學影片進行操作。 利用 Codespaces 維護倉儲與網站 說明 如何利用 Github Codespaces 維護網站內容 在近端執行動態網站 說明 如何利用近端可攜系統維護分組網站 說明 甲班第一組組長如何建立 midag1 Team , 並利用 Codespaces 維護 2a-midag1 分組倉儲 說明如何 利用 Replit 管理從 Classroom 取得的分組倉儲 待各分組的期中報告 Team 與倉儲全部建立就緒後, 則甲班學員後續可配合期末作業名稱 2a2, 由甲班各組組長建立 Team finalag1, finalag2 ....等. 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 期中分組作業名稱甲班為 2a, 其中甲班第一組組長必須建立名稱為 midag1 的 Team, 讓第一組的組員員加入. 其餘各組的期中報告 Team 名稱則分別為 midag2, midag3 .... 根據上述規劃, 甲班第一分組的期中協同倉儲將位於: https://github.com/mdecd2024/2a-midag1 , 第一組的期中報告網站將位於: https://mdecd2024.github.io/2a-midag1 .","tags":"w2","url":"./2a-midag6_2024-Spring-w2-blog-tutorial.html"},{"title":"2024 Spring 教學影片任務回報與自評","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第六組 組別的自評成績為 80 分 41023124 w4自評成績 75 分 cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回 github https://youtu.be/F1_YDWsGvwo cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github https://youtu.be/3VdJEzJY-oE cd2024 2b 3 如何設定 Github 帳號的雙重認證 https://youtu.be/pPD1wOjpyfQ 41023122 w4自評成績 70分 cd2024 2b 1 建立個人課程倉儲與網站 https://youtu.be/6BMiOcVb8v0 cd2024 2a 1 blog setup https://youtu.be/arG0XNdHuYA 41023107 w4自評成績65分 cd2024 2b w3 使用 gitpod 與 localhost 維護個人倉儲 41023233 w4自評成績75分 cd2024_2b_5_w2 第一組組長建立 Team 並設定分組倉儲 https://youtu.be/vwYnRnk8K_4 cd2024_2b_6_w2 從第一組空倉儲建立 cmsimde_site 內容 https://youtu.be/-kkxZlGnUuU cd2024_2b_7_w2 利用 codespaces 維護分組網站 https://youtu.be/3OGCk_aDP9U 41023249 w4自評成績68 41023239 w4自評成績70 cd2024_2a_w2_1 https://youtu.be/i5Nd69gyqGg cd2024 2a w2 4 利用 Replit 管理 Github Classroom 分組倉儲 https://youtu.be/N_Tx_ZJjoJ0 41023225 w4自評成績65","tags":"教學影片任務回報與自評","url":"./2a-midag6_2024-Spring-w4教學影片任務回報與自評-blog-tutorial.html"},{"title":"2024 Spring 課程 w5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 每周進度報告w5 協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖. ODOO PLM 論文中英並列任務 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 教學影片分組整理並自評 請各組自行搜尋前面已經發布的教學影片, 分別為 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 cd2024 2b 4 說明如何將倉儲 import 至 Replit 改版後推回 github cd2024 2a 1 blog setup cd2024 2b 1 建立個人課程倉儲與網站 cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github cd2024 2b 3 如何設定 Github 帳號的雙重認證 cd2024_2b_7_w2 利用 codespaces 維護分組網站 cd2024_2b_6_w2 從第一組空倉儲建立 cmsimde_site 內容 cd2024_2b_5_w2 第一組組長建立 Team 並設定分組倉儲 cd2024_2a_w2_1(41023239楊祐銘) cd2024 2a w2 4 利用 Replit 管理 Github Classroom 分組倉儲(41023239楊祐銘) wcm2024_1a_w3_2_將組員的個人倉儲納為分組倉儲的子模組 如何統整組員子模組中的協同設計網誌 當各組員每週的協同設計網誌文章放在個別的 cd2024 倉儲的 markdown 目錄中, 只要修改分組倉儲中的 pelicalconf.py, 使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數, 指定網誌統整目錄, 就可以在分組倉儲中納入所有組員在子模組中所編寫的協同網誌. 實際的設定操作 pelicanconf_py.txt, 是利用 pelicanconf.py 中的程式設定段, 將子模組中 markdown 目錄的 .md 動態複製到分組倉儲中的 combined_directory, 並避開分組倉儲與學員子模組倉儲中的 pages 目錄下的 .md 檔案後, 再進行網誌轉檔, 並且所產生的網誌超文件將存入所設定的 blog 目錄. 完成設定後的網誌轉檔指令為: pelican -s local_publishconf.py 表示要利用 local_publishconf.py 的設定進行轉檔, 且先前有關 pelicanconf.py 的設定也將導入執行. 過程中, 各組員必須將個別的網誌 .md 檔案名稱加上前綴字串, 例如: \"學號_\" 加上獨一無二的網誌 Slug 字串名稱, 且 Category 使用該組員的學號作為標示. 之後各組統整轉檔時, 才不至於發生相同網誌文章檔案名稱衝突的錯誤, 且從各分組網誌的 Categories 中即可找到各組員所編寫的所有網誌內容. 利用 NX1872 協同繪製零組件 從電腦輔助設計室中的電腦 C:\\Program Files\\Siemens\\NX1872 取得所需的 NX 套件目錄檔案, 之後將 NX1872 目錄存入隨身碟後, 可利用下列 start_USB_nx1872.bat 啟動. 電腦輔助設計室中 C: 安裝 NX1872, D: 則配置 NX2206 與 NX12, 若在電腦教室則可利用下列批次檔案啟動 NX, 若在各自的電腦或隨身碟帶有各版次的 NX 資料, 只需要透過網路取得授權, 就可直接從 USB 中執行各版次的 NX. 下載NX2027_lite (需要密碼, 解開後約 8G)","tags":"w5","url":"./2a-midag6_2024-Spring-w5-blog-tutorial.html"},{"title":"2024 Spring 課程w6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 更新分組倉儲中的分組倉儲 更改個人與群組 .md 與 slug名稱 , 加上自己的學號或者加上群組分組名稱 cd2024 2a w6 取下子模組, 以及更新學員倉儲內容 教學影片如下: https://youtu.be/BtYUHe8Actk?si=zpEdRXOtQluT22Fk cd2024 2a w6 利用 pelicanconf py 整合各組員的網誌 教學影片如下: https://youtu.be/XkImjlZSGGk 教學影片分組整理並自評 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點","tags":"w6","url":"./2a-midag6_2024-Spring-w6-blog-tutorial.html"},{"title":"2024 Spring 課程w7","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w7 更改個人與群組 .md 與 slug名稱 , 加上自己的學號或者加上群組分組名稱 協同產品設計實習的第七週, 正值春假期間, 用來回顧課程內容重點. 從協同設計的架構上, 個人與分組的倉儲中, 總共設計了以下幾種內容的協同模式: 分組網站內容的協同 - 其中包括章節式的網站內容與網誌內容, 可以透過 Python 程式方法整合各學員子模組中的 config/content.htm 以及 markdown/*.md 檔案至分組網站中 分組報告內容的協同 - 採用的是 Github Actions 與近端 MikTeX 中的 xelatex 將 .tex 轉為 pdf 的整合過程 分組產品設計的 PLM 協同 - 採用的是 Odoo PLM 模組, 讓各分組可以將網站內容、報告內容視為產品, 從協同架構的訂定作為起點, 完成資料展示作為終點, 逐一將過程的協調、派任與執行方法納入 PLM 系統管理 分組零組件設計的協同 - 分別採用 Solvespace 作為鋼球平衡台範例, 讓學員使用 Siemens NX 1872 進行協同零組件繪圖設計, 並將各零件的 .prt 檔案納入各學員的倉儲進行組立, 以便找出最佳的設計分工以及零組件轉檔流程 分組模擬場景設計的協同 - 當各分組順利完成鋼球平衡台的零組件轉檔後, 一旦進入 CoppeliaSim 場景後, 必須逐一配置感測器 (Sensors)、致動器 (Actuators) 以及 ZMQ RemoteAPI Python程式, 主要探討如何將此一場景模擬過程在 CoppeliaSim XML 檔案格式與 Siemens NXOpen Python 零件程式檔案間, 找到合用或最佳的協同產品設計模式. 分組專案簡報設計的協同 - 在上述各產品設計階段所累積的各種資料, 該如何有效整合到專案完成後必須進行的網際簡報中. 分組網站內容的協同 各分組網站內容的協同包含: 章節式網站內容 週記式網誌內容 網際簡報內容 其中首先要求各組員必須每週在 cd2024 倉儲中的 markdown 目錄編寫 markdown 網誌文章, 再經由 Pelican 轉檔至 blog 目錄中的超文件網誌. 由於 Pelican 採用 Python 檔案進行設定, 因此可以在轉檔的過程中, 將各子目錄中的組員倉儲網誌集合到分組倉儲中的 combined_markdown 目錄之後, 再指定將網誌超文件轉至各分組倉儲的 blog 目錄. 由於分組網誌內容協同時, 所有組員所編寫的 markdown 文章必須存入 combined_markdown 目錄, 因此 markdown 網誌文章檔案的命名不可重複, 且各網誌文章的 Slug 字串將會被當作用來命名轉檔後的超文件檔案名稱, 因此也不能重複. 至於當各組員採用 Replit 維護個人倉儲內容時, 可以直接從 Replit Connect 至 Github 取得維護倉儲的權限, 旦卻無法直接用管理分組倉儲, 因為各組員雖然擁有管理分組倉儲的權限, 但是無法在 Replit 中以免費的組員帳號管理 Github Classroom 所取得的分組倉儲. 而必須動態納入針對分組倉儲的 OpenSSH 管理權限. 分組報告內容的協同 add_to_content_html.py generate_pages.py","tags":"w7","url":"./2a-midag6_2024-Spring-w7-blog-tutorial.html"},{"title":"2024 Spring 課程w8","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w8 內容管理系統 cd2024 2a w8 產品協同架構說明 https://www.youtube.com/watch?v=CqhZm_9ugdc 協同產品設計實習課程使用網際內容管理系統, 採 Github Classroom 建立分組倉儲, 並由學員自行利用 cmsimde_site 作為 Github 倉儲的引擎目錄, 利用 Python 執行網頁編輯. 之後再轉檔為靜態網頁, 以便利用 Github Pages 所提供的 WWW 伺服器呈現協同產品設計過程的相關多媒體內容. 除了章節式的網站外, cmsimde_site 還額外利用 Pelican 管理使用者所建立的網誌, 以及利用 Reveal 管理使用者所建立的網際簡報. 在使用者每週的內容管理過程, 由於必須採用 Python 執行網頁編輯, cd2024 課程採用了四種不同的方法進行, 其中包括 Replit、Codespaces、Gitpod 以及 localhost. 由於前三者屬於雲端作業, 各有不同的使用規定與免費使用權限, 對於多人協同的產品設計團隊而言, 可以根據各自的喜好與環境選擇合用的網頁編輯工具, 且在多方了解下也可透過實際使用發展中的雲端 IDE 環境, 一窺未來可能的 AI 導引前景.","tags":"w8","url":"./2a-midag6_2024-Spring-w8-blog-tutorial.html"},{"title":"2024 Spring 課程w9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 自評2a-midag6期中考成績 w9 自評2a-midag6期中考成績 協同資料處理 請各班各組根據 2a_cd2024_midterm.csv , 以及 2b_cd2024_midterm.csv 中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結. 過程中, 請詳細說明各組及學員的倉儲與網站中的連結資料如何建立? 手動輸入? 利用程式進行處理? 或者採分工合作方式建立? 鋼球平衡台 PID 控制與模擬 對 Gemini 1.5 Pro 提問: 以下為利用 PID 控制 CoppeliaSim 鋼球平衡台場景 的 ZMQ RemoteAPI Python 程式, 請利用 Python 模組將系統控制過程, 鋼球在平衡台上的 x 方向座標與 y 方向, 利用 matplotlib 畫出來. \"這裡附上原本的 PID 控制程式碼\" 回答: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 # 導入必要的模組 # pip install pyzmq cbor keyboard matplotlib import matplotlib.pyplot as plt from zmqRemoteApi_IPv6 import RemoteAPIClient import keyboard # 利用 zmqRemoteAPI 以 23000 對場景伺服器進行連線 client = RemoteAPIClient( 'localhost' , 23000 ) print ( 'Program started' ) sim = client.getObject( 'sim' ) # Get the handles of the ball, motorx, and motory objects ball_handle = sim.getObject( '/ball' ) motorx_handle = sim.getObject( '/motorx' ) motory_handle = sim.getObject( '/motory' ) # PID control constants for x and y coordinates kp_x = 1.0 # Proportional gain for x ki_x = 0.1 # Integral gain for x kd_x = 0.5 # Derivative gain for x kp_y = 1.0 # Proportional gain for y ki_y = 0.1 # Integral gain for y kd_y = 0.5 # Derivative gain for y # Initialize error and integral terms for x and y coordinates error_sum_x = 0.0 last_error_x = 0.0 error_sum_y = 0.0 last_error_y = 0.0 # 建立用於儲存 x 和 y 座標的列表 x_coordinates = [] y_coordinates = [] sim.startSimulation() print ( 'Simulation started' ) # Function to get the ball's x and y coordinates def getBallCoordinates(): pos = sim.getObjectPosition(ball_handle, - 1 ) x = pos[ 0 ] y = pos[ 1 ] return x, y def controlMotor(target_x, target_y, dt): global error_sum_x, last_error_x, error_sum_y, last_error_y # Get the current ball coordinates current_x, current_y = getBallCoordinates() print ( \"Target: (\" , target_x, \",\" , target_y, \"), Current: (\" , current_x, \",\" , current_y, \")\" ) # Calculate errors for x and y coordinates error_x = target_x - current_x error_y = target_y - current_y # Update error sums for x and y coordinates error_sum_x + = error_x error_sum_y + = error_y # Calculate derivatives for x and y coordinates derivative_x = (error_x - last_error_x) / dt derivative_y = (error_y - last_error_y) / dt # Calculate control signals for x and y coordinates control_signal_x = kp_x * error_x + ki_x * error_sum_x + kd_x * derivative_x control_signal_y = kp_y * error_y + ki_y * error_sum_y + kd_y * derivative_y # Set the rotational angles of motorx and motory sim.setJointTargetPosition(motorx_handle, control_signal_x) sim.setJointTargetPosition(motory_handle, control_signal_y) # Update the last errors for x and y coordinates last_error_x = error_x last_error_y = error_y # 儲存目前的 x 和 y 座標 x_coordinates.append(current_x) y_coordinates.append(current_y) while True : if keyboard.is_pressed( 'q' ): # Stop simulation sim.stopSimulation() break # Control the motors to set the ball to the desired coordinates controlMotor( 0.3 , 0.3 , 0.05 ) # Adjust the time step (dt) and target coordinates as needed # 在模擬結束後繪製圖形 plt.plot(x_coordinates, label = 'X Coordinate' ) plt.plot(y_coordinates, label = 'Y Coordinate' ) plt.xlabel( 'Time' ) plt.ylabel( 'Coordinate' ) plt.title( 'Ball Position on Balancing Platform' ) plt.legend() plt.show() 實習步驟: 開啟可攜程式系統中的 CoppeliaSim 開啟鋼球平衡台模擬場景 啟動可攜程式系統, pip install keyboard cbor pyzmq matplotlib 在 SciTE 中執行上列程式, 確定系統穩定後, 按下 q 終止模擬 matplotlib 將畫出鋼球在平台上的 x 與 y 座標圖","tags":"w9","url":"./2a-midag6_2024-Spring-w9-blog-tutorial.html"},{"title":"2024 Spring 課程w1-1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 每周進度報告w1 第一周進度 依照mde.tw/cd2024中的 Topics / Video中的影片，觀看與進行創建倉儲與帳號 建立個人課程 cd2024 倉儲與網站的操作影片 (7:17) 設定 Replit 與 Github 應用授權的說明影片 (2:44) 說明如何設定 Github 雙重認證 (6:28) 說明如何利用 Replit 對 cd2024 改版 (20:16) 照著影片中的步驟創建個人的cd2024倉儲與網站與如何與Replit連結Github，並更新上推至倉儲去做更新 設定網誌 利用 [OBS] 加上廣播系統錄製的: 如何設定個人倉儲中的 Pelican 網誌","tags":"w1-1","url":"./2a-midag6_2024-Spring-w1-1blog-tutorial.html"},{"title":"2024 Spring 課程","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2a-midag6_2024-Spring-w1-blog-tutorial.html"}]};