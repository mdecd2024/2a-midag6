<?xml version="1.0" encoding="utf-8"?>
<<<<<<< HEAD
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統 - w10</title><link href="./" rel="alternate"></link><link href="./feeds/w10.atom.xml" rel="self"></link><id>./</id><updated>2024-05-10T14:06:04+08:00</updated><entry><title>2024 Spring 課程w10</title><link href="./41023124_2024-Spring-w10-blog-tutorial.html" rel="alternate"></link><published>2024-04-26T13:40:00+08:00</published><updated>2024-05-10T14:06:04+08:00</updated><author><name>41023124</name></author><id>tag:None,2024-04-26:./41023124_2024-Spring-w10-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
=======
<feed xmlns="http://www.w3.org/2005/Atom"><title>網際內容管理系統 - w10</title><link href="./" rel="alternate"></link><link href="./feeds/w10.atom.xml" rel="self"></link><id>./</id><updated>2024-05-10T19:59:02+08:00</updated><entry><title>2024 Spring 課程w10</title><link href="./2a-midag6_2024-Spring-w10-blog-tutorial.html" rel="alternate"></link><published>2024-04-26T22:04:00+08:00</published><updated>2024-05-10T19:59:02+08:00</updated><author><name>41023124</name></author><id>tag:None,2024-04-26:./2a-midag6_2024-Spring-w10-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;w10&lt;/h1&gt;
&lt;h2&gt;W10 實習任務一&lt;/h2&gt;
&lt;p&gt;將老師給的2a出席名單，將程式詢問AI後，將程式改寫並在每一行後方進行註記，方便了解與解析此Brython程式如何進行運作&lt;/p&gt;
&lt;p&gt;&lt;span&gt;內容與重點，程式是如何運行與操作的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.githubusercontent.com/41023124/500875a36052f90472928c0fd722707e/raw/42ccb4354ff3beaf2b5771b40cd2133d1d8c944d/2a2"&gt;程式gists url&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;程式內容與重點，程式是如何運行與操作的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;這個程式是一個Python腳本，它使用了Brython庫（Python的瀏覽器端實現），用於在網頁上動態加載和處理CSV文件數據，並將處理後的數據以HTML的形式插入到網頁中。&lt;/p&gt;
&lt;p&gt;讓我們來看一下它的主要功能和運行流程：&lt;/p&gt;
&lt;p&gt;1. **導入模塊**：程式一開始導入了需要使用的模塊，包括`window`（瀏覽器窗口對象）、`ajax`（用於發送Ajax請求）、`document`（HTML文檔對象）、`html`（HTML元素生成器）。&lt;/p&gt;
&lt;p&gt;2. **fetch_csv_data函數**：這個函數是整個程式的主要部分，它用於獲取CSV數據並將其轉換為HTML格式插入到網頁中。&lt;/p&gt;
&lt;p&gt;- **CSV文件地址定義**：將CSV文件的URL地址存儲在變量`url`中。&lt;br&gt; &lt;br&gt; - **請求完成回調函數**：定義了`on_complete`函數作為Ajax請求完成後的回調函數。如果請求成功（狀態碼為200或0），則執行以下操作：&lt;br&gt; &lt;br&gt; - 讀取CSV文件內容並按行拆分。&lt;br&gt; &lt;br&gt; - 遍歷每一行數據，忽略空行，將非空行按逗號拆分，並將拆分後的數據存儲到列表中。&lt;br&gt; &lt;br&gt; - 去除第一行（標題行），保留數據行。&lt;br&gt; &lt;br&gt; - 針對每個學生的數據，生成其個人網站鏈接、GitHub倉庫鏈接，以及小組網站鏈接和GitHub倉庫鏈接。&lt;br&gt; &lt;br&gt; - 將生成的鏈接和相關信息插入到HTML頁面中的指定位置。&lt;br&gt; &lt;br&gt; - **發送Ajax請求**：使用Ajax對象發送GET請求到指定的URL，綁定了完成事件，設置請求頭部，並發送請求。&lt;br&gt; &lt;br&gt;3. **調用fetch_csv_data函數**：在程式末尾調用了`fetch_csv_data`函數，觸發CSV數據的獲取和處理過程。&lt;/p&gt;
&lt;p&gt;總的來說，這個腳本通過Ajax請求獲取CSV數據，然後解析該數據並生成HTML元素，最後將生成的HTML插入到網頁中，完成了將CSV數據動態展示在網頁上的功能。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;鋼球平衡台 PID 控制與模擬&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;W10 實習任務二:&lt;/p&gt;
&lt;p&gt;請下載&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="http://229.cycu.org/cd2024_ball_balancing_platform_control_ref.7z"&gt;cd2024_ball_balancing_platform_control_ref.7z&lt;/a&gt;, 閱讀後請將摘要內容放入個人與分組網誌中.&lt;/p&gt;
&lt;p&gt;閱讀結果:&lt;/p&gt;
&lt;p&gt;各篇論文要點摘要：&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;實習步驟:&lt;/p&gt;
&lt;p&gt;開啟可攜程式系統中的 CoppeliaSim 開啟鋼球平衡台模擬場景 啟動可攜程式系統, pip install keyboard cbor pyzmq matplotlib 在 SciTE 中執行上列程式, 確定系統穩定後, 按下 q 終止模擬 matplotlib 將畫出鋼球在平台上的 x 與 y 座標圖&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;鋼球平衡台零組件繪圖&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;W10 實習任務三:&lt;/p&gt;
&lt;p&gt;請根據&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://mde.tw/cd2024/downloads/Solvespace_model%20_2d_for_cd2024_w6.7z"&gt;Solvespace_model _2d_for_cd2024_w6.7z&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;零組件尺寸, 利用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EehhlaMDzTxAlOBppbPSoPwBCzsOQxvshtNL8xJel-zbJQ?e=YwKvdH"&gt;Siemens NX1872.7z&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category></entry><entry><title>2024 Spring 課程w10</title><link href="./41023124_2024-Spring-w10-blog-tutorial.html" rel="alternate"></link><published>2024-04-26T13:40:00+08:00</published><updated>2024-05-10T19:59:02+08:00</updated><author><name>41023124</name></author><id>tag:None,2024-04-26:./41023124_2024-Spring-w10-blog-tutorial.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
>>>>>>> b1b27c84fb46994fde23a6bff902310359c03d10
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;w10&lt;/h1&gt;
&lt;h2&gt;W10 實習任務一&lt;/h2&gt;
&lt;p&gt;將老師給的2a出席名單，將程式詢問AI後，將程式改寫並在每一行後方進行註記，方便了解與解析此Brython程式如何進行運作&lt;/p&gt;
&lt;p&gt;&lt;span&gt;內容與重點，程式是如何運行與操作的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.githubusercontent.com/41023124/500875a36052f90472928c0fd722707e/raw/42ccb4354ff3beaf2b5771b40cd2133d1d8c944d/2a2"&gt;程式gists url&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;span&gt;程式內容與重點，程式是如何運行與操作的&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;這個程式是一個Python腳本，它使用了Brython庫（Python的瀏覽器端實現），用於在網頁上動態加載和處理CSV文件數據，並將處理後的數據以HTML的形式插入到網頁中。&lt;/p&gt;
&lt;p&gt;讓我們來看一下它的主要功能和運行流程：&lt;/p&gt;
&lt;p&gt;1. **導入模塊**：程式一開始導入了需要使用的模塊，包括`window`（瀏覽器窗口對象）、`ajax`（用於發送Ajax請求）、`document`（HTML文檔對象）、`html`（HTML元素生成器）。&lt;/p&gt;
&lt;p&gt;2. **fetch_csv_data函數**：這個函數是整個程式的主要部分，它用於獲取CSV數據並將其轉換為HTML格式插入到網頁中。&lt;/p&gt;
&lt;p&gt;- **CSV文件地址定義**：將CSV文件的URL地址存儲在變量`url`中。&lt;br&gt; &lt;br&gt; - **請求完成回調函數**：定義了`on_complete`函數作為Ajax請求完成後的回調函數。如果請求成功（狀態碼為200或0），則執行以下操作：&lt;br&gt; &lt;br&gt; - 讀取CSV文件內容並按行拆分。&lt;br&gt; &lt;br&gt; - 遍歷每一行數據，忽略空行，將非空行按逗號拆分，並將拆分後的數據存儲到列表中。&lt;br&gt; &lt;br&gt; - 去除第一行（標題行），保留數據行。&lt;br&gt; &lt;br&gt; - 針對每個學生的數據，生成其個人網站鏈接、GitHub倉庫鏈接，以及小組網站鏈接和GitHub倉庫鏈接。&lt;br&gt; &lt;br&gt; - 將生成的鏈接和相關信息插入到HTML頁面中的指定位置。&lt;br&gt; &lt;br&gt; - **發送Ajax請求**：使用Ajax對象發送GET請求到指定的URL，綁定了完成事件，設置請求頭部，並發送請求。&lt;br&gt; &lt;br&gt;3. **調用fetch_csv_data函數**：在程式末尾調用了`fetch_csv_data`函數，觸發CSV數據的獲取和處理過程。&lt;/p&gt;
&lt;p&gt;總的來說，這個腳本通過Ajax請求獲取CSV數據，然後解析該數據並生成HTML元素，最後將生成的HTML插入到網頁中，完成了將CSV數據動態展示在網頁上的功能。&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;鋼球平衡台 PID 控制與模擬&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;W10 實習任務二:&lt;/p&gt;
&lt;p&gt;請下載&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="http://229.cycu.org/cd2024_ball_balancing_platform_control_ref.7z"&gt;cd2024_ball_balancing_platform_control_ref.7z&lt;/a&gt;, 閱讀後請將摘要內容放入個人與分組網誌中.&lt;/p&gt;
&lt;p&gt;閱讀結果:&lt;/p&gt;
&lt;p&gt;各篇論文要點摘要：&lt;/p&gt;
&lt;p&gt;結論：&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;實習步驟:&lt;/p&gt;
&lt;p&gt;開啟可攜程式系統中的 CoppeliaSim 開啟鋼球平衡台模擬場景 啟動可攜程式系統, pip install keyboard cbor pyzmq matplotlib 在 SciTE 中執行上列程式, 確定系統穩定後, 按下 q 終止模擬 matplotlib 將畫出鋼球在平台上的 x 與 y 座標圖&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;鋼球平衡台零組件繪圖&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;W10 實習任務三:&lt;/p&gt;
&lt;p&gt;請根據&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://mde.tw/cd2024/downloads/Solvespace_model%20_2d_for_cd2024_w6.7z"&gt;Solvespace_model _2d_for_cd2024_w6.7z&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;零組件尺寸, 利用&lt;span&gt;&amp;nbsp;&lt;/span&gt;&lt;a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EehhlaMDzTxAlOBppbPSoPwBCzsOQxvshtNL8xJel-zbJQ?e=YwKvdH"&gt;Siemens NX1872.7z&lt;/a&gt;&lt;span&gt;&amp;nbsp;&lt;/span&gt;(需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.&lt;/p&gt;</content><category term="w10"></category><category term="網誌編寫"></category></entry></feed>