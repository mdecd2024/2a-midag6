<h1>About</h1>
<p>網頁:  <a href="https://mdecd2024.github.io/2a-midag6">https://mdecd2024.github.io/2a-midag6</a> </p>
<p>網誌:  <a href="https://mdecd2024.github.io/2a-midag6/blog">https://mdecd2024.github.io/2a-midag6/blog</a> </p>
<p>簡報:  <a href="https://mdecd2024.github.io/2a-midag6/reveal/">https://mdecd2024.github.io/2a-midag6/reveal/</a> </p>
<p>倉儲:  <a href="https://github.com/mdecd2024/2a-midag6">https://github.com/mdecd2024/2a-midag6</a> </p>
<p>本 cmsimde 網際內容管理系統的對應 Template 倉儲:</p>
<p style="padding-left: 30px;"><a href="https://github.com/mdecd2024/2a-midag6">https://github.com/mdecd2024/2a-midag6</a> </p>
<p style="padding-left: 30px;">此 Template 將 cmsimde 作為子目錄而非子模組, 使用者可以依照需求自行修改</p>
<p style="padding-left: 30px;">倉儲對應網站: <a href="https://mdecd2024.github.io/2a-midag6">https://mdecd2024.github.io/2a-midag6</a><span> </span></p>
<h1>cmsimde</h1>
<p><span style="background-color: #ccffcc;">SMap</span> - SiteMap - 依照階次列出網站的所有頁面.</p>
<p><span style="background-color: #ccffcc;">EditA</span> - Edit All page - 將所有頁面放入編輯模式中, 主要用來處理頁面搬遷, 刪除或決定衝突頁面內容版本.</p>
<p><span style="background-color: #ccffcc;">Edit</span> - Edit page - 先選擇要編輯的單一頁面後, 再點選 Edit, 即可進入單一頁面的編輯模式.</p>
<p><span style="background-color: #ccffcc;">Config</span> - Configure Site - 編輯頁面標題與管理者密碼.</p>
<p><span style="background-color: #ccffcc;">Search</span> - 動態頁面內容的關鍵字搜尋.</p>
<p><span style="background-color: #ccffcc;">IUpload</span> - Image file Upload - 圖檔的上傳功能, 可以上傳 jpg, png 與 gif 檔案, 其中若在手機上傳圖檔, 系統會自動將圖片檔案縮小為 800x800 大小.</p>
<p><span style="background-color: #ccffcc;">IList</span> - Image file List - 列出可以直接在頁面編輯模式中引用的圖片檔案.</p>
<p><span style="background-color: #ccffcc;">FUpload</span> - File Upload - 一般檔案的上傳功能, 目前可以上傳的檔案副檔名包括 'jpg', 'png', 'gif', '7z', 'pdf', 'zip', 'ttt', 'stl', 'txt', 'html', 'mp4' 等, 使用者可以自行修改.</p>
<p><span style="background-color: #ccffcc;">FList</span> - File List - 列出可以直接在頁面編輯模式中引用的上傳檔案.</p>
<p><span style="background-color: #ccffcc;">Logout</span> - 登出頁面編輯模式.</p>
<p><span style="background-color: #ccffcc;">Convert</span> - 將動態網站中位於 config/content.htm 檔案, 透過分頁設定轉為 content 目錄中的靜態網頁.</p>
<p><span style="background-color: #ccffcc;">acp</span> - git add, git commit 與 git push, 通常只有在 localhost 或自架主機上利用網頁表單協助將倉儲改版內容推向 Github 倉儲.</p>
<p><span style="background-color: #ccffcc;">SStatic</span> - Start Static Site - 利用 Python 啟動網站伺服功能, 可以讓使用者檢查轉檔後的靜態網站內容.</p>
<p><span style="background-color: #ccffcc;">RStatic</span> - Replit Static Site URL - 僅用於 Replit 模式, 當使用者按下 SStatic 後, 可以按下 RStatic 進入當下尚未推向 Github Pages 的靜態網站.</p>
<p><span style="background-color: #ccffcc;">80</span> - 由 init.py 中 static_port 所決定的連結字串, 一般不使用 80, 只有在 Replit 中為了與動態網站共用 port, 才特別設為 80.</p>
<p></p>
<h1>Codespace</h1>
<p><a href="https://github.com/codespaces">https://github.com/codespaces</a></p>
<h1>Replit</h1>
<p><a href="https://replit.com">https://replit.com</a></p>
<p>利用 init_replit 指令安裝所需 Python 模組<br/><br/>chmod u+x init_replit<br/><br/>./init_replit</p>
<p dir="auto">On Replit:</p>
<p dir="auto">.replit: python3 main.py</p>
<p dir="auto">chmod u+x cms init_replit</p>
<p dir="auto">./init_replit</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde_site (not needed): git submodule update --init --recursive</p>
<p dir="auto" style="padding-left: 30px;">for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent</p>
<p dir="auto">password generator: <a href="https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py">https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py</a> </p>
<p dir="auto"></p>
<p dir="auto">for IPv6 only Ubuntu:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.com<br/>ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p<br/><br/>for Replit:<br/><br/>.ssh 目錄中的 config, 將 SSH session 名稱設為 github.com:<br/><br/>Host github.com<br/>User git<br/>Hostname github.co<br/>#since Replit works for IPv4, therefore no ProxyCommand setting needed<br/>#ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p</p>
<p></p>
<p></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<div id="brython_div2"></div>
<div></div>
<div></div>
<h1>w4</h1>
<h2>w1</h2>
<h3>cd2024 2b 1 建立個人課程倉儲與網站 (41023122)</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/6BMiOcVb8v0?si=X5-MnxK7_Gq9tJgJ" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>影片敘述 : </p>
<p></p>
<p></p>
<p>cd2024 2b 1 建立個人課程倉儲與網站.txt 逐字稿 丟至 downloads</p>
<p></p>
<p>逐字稿</p>
<p></p>
<p>0:00:04.352,0:00:09.472<br/>好這個已經啟動所以你看不到畫面你要講啊</p>
<p>0:00:10.240,0:00:12.288<br/>所以我們就是從</p>
<p>0:00:13.824,0:00:17.664<br/>我看不到我操作的畫面你要喊一聲</p>
<p>0:00:18.944,0:00:22.272<br/>所以我們從這裡點進來</p>
<p>0:00:23.296,0:00:25.344<br/>然後再</p>
<p>0:00:28.416,0:00:32.000<br/>我們的這一個team code的是這個對吧</p>
<p>0:00:36.608,0:00:39.168<br/>好然後我們</p>
<p>0:00:40.448,0:00:42.240<br/>必須先登入</p>
<p>0:00:45.056,0:00:46.848<br/>那麼</p>
<p>0:00:47.872,0:00:50.688<br/>我先來看一下</p>
<p>0:00:51.456,0:00:53.504<br/>剛剛那個刪掉好了</p>
<p>0:00:55.296,0:01:01.440<br/>好因為你在裡面見這個倉儲啊其實應該很自由了就說我</p>
<p>0:01:01.696,0:01:02.720<br/>可以</p>
<p>0:01:04.512,0:01:08.864<br/>我可以連到我的剛剛建的我把它刪掉</p>
<p>0:01:13.472,0:01:18.848<br/>這個 我把這個刪掉 所以要刪掉的話</p>
<p>0:01:19.360,0:01:20.896<br/>你直接選他</p>
<p>0:01:22.432,0:01:24.224<br/>我又要重做一遍</p>
<p>0:01:24.736,0:01:29.600<br/>那他的倉儲管理是在倉儲的設定區</p>
<p>0:01:31.136,0:01:34.464<br/>Ok好所以我要把它刪掉重做</p>
<p>0:01:35.671,0:01:36.479<br/>delete</p>
<p>0:01:37.792,0:01:39.840<br/>然後</p>
<p>0:01:40.096,0:01:42.400<br/>他必須要打這個</p>
<p>0:01:45.216,0:01:48.544<br/>好把它刪掉</p>
<p>0:01:49.312,0:01:53.664<br/>好 所以 第一步要做的部分啊你就要先登入</p>
<p>0:01:54.432,0:01:56.480<br/>有沒有 先登入</p>
<p>0:01:57.248,0:01:59.552<br/>然後再連到</p>
<p>0:02:05.696,0:02:08.000<br/>他的這個連結啊</p>
<p>0:02:09.280,0:02:13.632<br/>是在我可以打在我們這個團隊的</p>
<p>0:02:14.400,0:02:16.192<br/>主頻道這裡好了</p>
<p>0:02:17.984,0:02:23.616<br/>所以我們應該直接打在打在這裡</p>
<p>0:02:23.872,0:02:28.736<br/>所以是cd2024那你應該就看得到了</p>
<p>0:02:32.064,0:02:34.368<br/>倉儲 template</p>
<p>0:02:35.392,0:02:37.440<br/>打在這裡</p>
<p>0:02:37.655,0:02:44.519<br/>https://github.com/mdecycu/cmsimde_site</p>
<p>0:02:45.120,0:02:46.912<br/>這個</p>
<p>0:02:47.680,0:02:50.752<br/>那麼 我們把他</p>
<p>0:02:51.520,0:02:54.080<br/>變成是網址</p>
<p>0:02:59.456,0:03:00.992<br/>好像你應該</p>
<p>0:03:02.528,0:03:04.832<br/>就可以直接看到了 對吧</p>
<p>0:03:05.344,0:03:08.416<br/>所以你只要進入團隊啊</p>
<p>0:03:08.928,0:03:13.280<br/>你點這個就可以連到我們想要你</p>
<p>0:03:14.304,0:03:16.352<br/>進行處理的這個</p>
<p>0:03:16.864,0:03:19.424<br/>我們應該是這個</p>
<p>0:03:19.936,0:03:21.472<br/>點進去</p>
<p>0:03:23.008,0:03:25.056<br/>有沒有你就跑到我們的template</p>
<p>0:03:26.080,0:03:29.664<br/>然後你利用這個template來create一個新的</p>
<p>0:03:30.944,0:03:31.968<br/>倉儲</p>
<p>0:03:34.016,0:03:40.160<br/>Ok 然後要選cd2024小寫的喔 是小寫的 !</p>
<p>0:03:41.440,0:03:47.584<br/>然後這裡就是把協同產品設計實習的個人課程網頁</p>
<p>0:03:47.840,0:03:50.400<br/>當作說明Description就是說明</p>
<p>0:03:50.912,0:03:55.520<br/>那optional是選項的意思 這表示說其實是可以</p>
<p>0:03:55.776,0:04:01.920<br/>不一定要輸入這個說明 但是你想要輸入說明 待會就會出現在右上方比較清楚</p>
<p>0:04:02.944,0:04:04.480<br/>好像我們就create</p>
<p>0:04:06.272,0:04:10.624<br/>他就會把我們的tempreat那個倉儲啊</p>
<p>0:04:11.136,0:04:14.464<br/>內容把他抓進來 有沒有抓進來</p>
<p>0:04:14.976,0:04:20.607<br/>那你要弄成網站的話你必須要跑到倉儲的這個設定</p>
<p>0:04:21.119,0:04:22.143<br/>這個設定</p>
<p>0:04:23.167,0:04:28.799<br/>所以每一個倉儲他都有這個設定 只要你是擁有管理權限</p>
<p>0:04:29.823,0:04:32.639<br/>好 你就點他</p>
<p>0:04:33.151,0:04:35.967<br/>然後左邊這裡就有一個pages</p>
<p>0:04:37.657,0:04:38.385<br/>這個</p>
<p>0:04:39.004,0:04:40.575<br/>好你再點進來</p>
<p>0:04:42.111,0:04:47.231<br/>好然後 把分支裡面的main</p>
<p>0:04:47.743,0:04:49.535<br/>設為</p>
<p>0:04:49.791,0:04:53.119<br/>網頁的跟目錄 root就是網頁的跟目錄</p>
<p>0:04:53.375,0:04:54.655<br/>然後把它存起來</p>
<p>0:04:55.423,0:04:56.959<br/>那他就會轉檔</p>
<p>0:04:57.215,0:05:00.031<br/>轉檔的時候啊他就會</p>
<p>0:05:00.543,0:05:06.687<br/>有一個註記 所以你把它點進來 假如你要看他的過程去才蠻複雜的然後你看他的步驟</p>
<p>0:05:07.199,0:05:11.039<br/>他會做很多的設定他會下載檢查程式</p>
<p>0:05:11.295,0:05:14.367<br/>那這個是github他自己會幫你做</p>
<p>0:05:14.879,0:05:18.207<br/>所以他做完之後啊</p>
<p>0:05:18.463,0:05:24.607<br/>一開始內建啊他是有一個樣板 可是我們是自己寫的</p>
<p>0:05:24.863,0:05:26.399<br/>是用他的樣板</p>
<p>0:05:26.655,0:05:32.031<br/>所以他這裡會有三個步驟所以你看他密密麻麻其實他做了很多步驟</p>
<p>0:05:32.287,0:05:35.871<br/>所以第一步已經完成 緊接著第二部</p>
<p>0:05:36.127,0:05:39.711<br/>Report就是report build states就是他到底</p>
<p>0:05:39.967,0:05:45.599<br/>build的怎麼樣他把他資料存起來 可以或者不行所以 所以他每一個步驟</p>
<p>0:05:45.855,0:05:50.207<br/>他都有歷程 最後就把它部屬在一個虛擬主機</p>
<p>0:05:50.975,0:05:57.119<br/>那這個OK啦 ok之後啊其實你這裡只要重新載入原先設定這個</p>
<p>0:05:57.375,0:06:03.519<br/>你的網站的連結就出來 所以點進來就是我們現在要</p>
<p>0:06:04.287,0:06:10.431<br/>這個是第一步所以我們這個假如已經建起來了的</p>
<p>0:06:10.687,0:06:13.759<br/>我們就可以吧這個網址到這邊</p>
<p>0:06:14.271,0:06:16.063<br/>把它ctrl+c下來</p>
<p>0:06:16.319,0:06:18.623<br/>看到我們這邊了</p>
<p>0:06:18.879,0:06:23.231<br/>操作影片待會我們會有 那個影片的MP4</p>
<p>0:06:23.743,0:06:25.023<br/>然後啊</p>
<p>0:06:26.559,0:06:28.351<br/>建立的</p>
<p>0:06:28.607,0:06:34.751<br/>案例網站 你這邊也可以看到 我們後面再教你</p>
<p>0:06:35.007,0:06:36.799<br/>他的這個寫法</p>
<p>0:06:37.311,0:06:43.455<br/>這個是他網站 假如你在網誌 因為最後你還是要會寫 這個我們在教你</p>
<p>0:06:43.711,0:06:49.855<br/>假如在網誌裡面 因為我現在在編這個網誌 前後只要加大於小於他就變網站</p>
<p>0:06:50.111,0:06:56.255<br/>連結那我們現在還沒有取到現在這一個影片的網址 我們待會會</p>
<p>0:06:56.511,0:07:02.655<br/>很長的網址放在這裡 但是我們這種格式的話他不會出現那個很</p>
<p>0:07:02.911,0:07:07.775<br/>長的網址 他只會出現我們中括號裡面這個連結</p>
<p>0:07:08.287,0:07:11.103<br/>好所以我們現在假如把它拍好</p>
<p>0:07:11.871,0:07:16.479<br/>所以我們就要把現在這個影片我要把它停止錄製</p><h3>cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github</h3>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/3VdJEzJY-oE?si=ISL1atN75CkkaQgT" title="YouTube video player" width="560"></iframe></p>
<p>影片敘述 :</p>
<p>本次上課內容與github和replit息息相關，如果需要使用replit協同、同步更改github上的內容，就需要利用本影片的步驟，進行github account 上的設定與 replit 去做連結，使其可以相互信任。</p>
<p>cd2024_2b_2_如何從 Replit Account 設定 Connect 連結到 Github.txt 逐字稿 txt 丟至downloads</p>
<p>開始啊<br/>我們就連到我登入這裡你必須要登入到<br/>你必須登入到github<br/>然後同時啊<br/>登入到replit<br/>所以你必須要啊先把兩邊把它連起來<br/>意思就是說你要跑到你的<br/>replit的這個帳號下<br/>這是你replit的帳號<br/>你要點選他的account<br/>這是你帳號下面的這個帳號<br/>設定<br/>所以我點選這個的話我目前啊<br/>在底下這裡其實我已經有連結了<br/>兩邊能不能信任<br/>靠的就是這個連線的服務<br/>就是這個<br/>假如你已經出現disconnect<br/>表示這一個你已經做過<br/>假如你是出現connect表示還沒有連結<br/>最假如你本身的github是對應到connect<br/>你就給他點下去<br/>他會在你的電腦安裝一個應用程式<br/>Ok表示你授權<br/>可以兩邊可以互通<br/>互通之後的帳號就會長這樣<br/>你想要連結到帳號下的設定<br/>OK<br/>那他底下這邊就有一個應用程式<br/>這個是帳號<br/>在整合區<br/>Integration是整合的意思<br/>他底下他就有一個Applications<br/>去找你兩邊的這個信任是成功的<br/>你點選這個Applications他就會出現這個<br/>所以你假如有Application下面有replit<br/>表示你的github跟replit兩邊是信任<br/>意思就說你待會假如吧<br/>倉儲啊輸入到你的replit<br/>改版完是可以推回來<br/>這個就是我們要的<br/>我說這個是第一部所以我們確定有這個之後啊<br/>我們待會再來做inport的動作所以我們這個小影片我們先把它<br/>拍下來ok所以我們小影片這一小段喔<br/>我們先拿</p><h3>cd2024 2b 3 如何設定 Github 帳號的雙重認證</h3>
<p>影片字幕</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/pPD1wOjpyfQ?si=U9TR2NMuhe_u9Ys1" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>影片敘述 :</p>
<p>因為github政策更改，所以所有用戶必須在時限內雙重認證，不然將會被github鎖定mail，所以本影片利用綁定智慧手環、手機下載 Authy 的免費 Apps ，幫變綁定與認證github驗證碼與成功雙重驗證等等</p>
<p></p>
<p>cd2024_2b_3_如何設定 Github 帳號的雙重認證.txt 逐字稿 txt 丟至 downloads</p>
<p>好所以雙重認證啊其實就是<br/>你在電腦上要登入的話<br/>比方說我這個字所以能夠登入啊<br/>我是已經通過他的雙重認證<br/>查驗<br/>所以你要設定的話你 你必須要登入到github<br/>我就第一次當然不可能雙重認證<br/>然後你進來就要趕快跑到這個帳號 帳號的設定區<br/>然後找到他的這個密碼跟認證這一個<br/>項目<br/>passwords這個是密碼<br/>authentication是認證<br/>然後你給他點進來<br/>然後他這個內建底下這邊啊他這個應該是沒有啟動了<br/>雙重<br/>雙重認證<br/>然後你給他啟動的話像我是綁定<br/>我這個是綁定到<br/>我的手錶<br/>假如你有智慧手錶跟手機可以連的話<br/>你就可以安裝這個<br/>只有這個是免費的<br/>Ok只有這個是免費<br/>那手機也可以安裝這個叫你要的話<br/>你手機就<br/>搜尋一下這個authy app<br/>然後你手機也可以用<br/>OK<br/>好那只有這一個套件是免費可以<br/>把那個密碼因為你在像我在Apple Watch我是可以把手機上的這一個apps<br/>安裝在手錶上<br/>所以你就只要帶手錶不需要帶手機<br/>就這樣<br/>好所以你聽到這裡面啦我們想要讀一下<br/>因為他這邊即便是簡體中文啊<br/>他還是英文啊所以你看<br/>他這邊怎麼講<br/>他說從<br/>因為我們上學期就知道了嘛<br/>從2023的3月<br/>到年底<br/>逐漸的開始強制<br/>所有用戶<br/>都必須要用雙重認證<br/>所以你只要有以前舊的帳號一定記得要趕快設因為他不知道什麼時候<br/>OK<br/>他這裡啊給你45天啊<br/>我給你45天因為你建帳號之後45天內你一定要趕緊把它弄起來沒有的話就進不去了<br/>那舊帳號我就不曉得他的他的policy怎樣然後你的帳號因為沒有雙重認證被鎖定<br/>你只好重建<br/>重建的部分不能用原來的那個email就比較麻煩<br/>因為他每一個email只能<br/>在這個github他們上登記一次<br/>然後那他的使用就是除了連到這邊之外<br/>他其實是利用<br/>利用這一個二維條碼所以你只要看他下面的說明啊<br/>有沒有<br/>這個是我們剛講的帳號下的設定<br/>然後選擇到密碼跟認證<br/>好然後在這個區域在這個區域啊<br/>你點選說我要啟用<br/>雙重認證<br/>英文的話是enable<br/>那你假如<br/>知道這個是啟用之後啊<br/>他這邊就會出現一個二維條碼<br/>所以這個二維條碼你就必須要用你的<br/>手機<br/>打開你的mobile意思就是給他的mobile裡面他會有一個<br/>相機的選項<br/>然後拍這個二維條碼<br/>然後他<br/>基本上他就會秀出啊<br/>你可以輸入到github的<br/>數字<br/>就這樣<br/>然後一旦設好之後很重要的一點啊<br/>好像這個就是二維條碼然後你說那麼完之後很重要的一點啊你一<br/>要下載這一個<br/>回覆的這個字串<br/>他叫做recovery Codes<br/>萬一你的手機壞掉<br/>或者是你的手機不見<br/>你沒辦法用啊因為這個時候你就要靠這個回覆嗎來<br/>取回帳號<br/>就這樣啊這個回覆嗎你要嘛把它存在隨身碟要嗎把它同時送到你<br/>遠端的<br/>比較常用的電子郵箱<br/>那保證說<br/>最後<br/>萬一相關的設定都在手錶或手機上的不見了你還<br/>可以拿這一串是一堆一堆這個編碼的數字加上<br/>來取回你的這個帳號<br/>而且你一定要<br/>把它下載否則它是上面會有一個選項他說你存了之後啊你說我已經存<br/>我的回覆碼<br/>然後這個時候你才可以把兩段因為他很害怕萬一你的這一個兩段式<br/>認證出問題的話這個帳號形同是沒有任何人可以登入<br/>那假如你是付費的話你還可以請他幫你處理<br/>我要去打電話也許要從你的這個帳號因為你付費的他有認證碼<br/>信用卡或者用什麼樣式用什麼方式來付錢對吧你說我就是<br/>也許還可以拿回來但是因為我們是免費的<br/>免費帳號是沒有這個金流的部分所以只靠這一個回覆碼來取回你的認證<br/>好像我們這個影片就可以把它存起來<br/>然後是在這裡</p><h2>w2</h2>
<h2>w3</h2>
<!-- editor2 結束 -->
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>